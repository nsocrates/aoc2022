example_input = '>>><<><>><<<>><>>><<<>>><<<><<<>><>><<>>'
puzzle_input = '><<><<<>><<<<><<<>>>><<<<>><<>><>>>><<>>><><<<<>>>><>>><>>>><<<<>><<<>>><<<><<>><<>>><><<><<<>><<<<>><<<<>>>><<<<><<>>><<<><<>>><><>>>><>>><>><>>><<>><<<>><<<>>><<<<>>>><<<<>>><<>>><<>><<<>>><<>><<>>><<<>><><>><<><>>><<>>><<>><<<>>><<<>>><<<>>>><<>>><<<<>>><><<>>>><>>><<<<>>><>>>><<<<>><<<>>>><<<>><<<>>>><<>>><><<<>>><<<<>>>><<<><<<<>><<<<><<<<>>><<<>>>><>><>>><>><<<><><<<><<>><<<<>>>><<><<<<>>>><<<><>>><>><<><<<<>><<>>><<<>>>><<><<>><<<>><><>>><<<>>>><>>><<<<><<<<><<<<>>><<<<>>>><<<>>>><<<<>>><<<>><<>>><>><<<<>>>><<>>><<>>>><<<><<<>><>><<<<>><><>><>>>><<<>>><<<<>>>><<<<>>><<<<><<>>>><<<>>>><<<<>><<<>><>>>><<<>>><<<<>>>><>><<>><<<<>>><<<>>><<<>>>><><<>>>><<<<>><<>><<>>>><<>>><<>>><<<>>>><>>><<<>>><<<<>><>>>><<<<>>>><<<<>>><<<>>><<<>>><<<<><<<>>><><<<<>>><>>><<<<>>>><<<<>><>><<<<>><>>>><<<<>><<><<<><<><<<<><>>>><<>><><<<<><<<<>><>><<>>>><<<<>><>>><>><>><>>><>><<><<<><<<>>>><><>>>><<<>>><<<<>>><>>>><<>><>>><>>>><><<<><<<<>><<<><<<<>>>><<>>><<<><<<>>><<<>>><<<<>><>>>><<<<><<>>><<<><<<<>>>><<<><<<><>>><>><<<><<<>>><<<>>><<<>>>><<<<>><<<>><<<<>>>><<<<><<<><>><<>><>>><<>>>><>><<<>>><<<<>><<<<><>>>><>>><<<><<<<>>>><<>>>><<<>><>>>><<><<<<>>><<>>><<<<><>>>><<>><<><<>><><>><<<<>><<<<>>><<>><<>><>>><>>><<><<<<>><<<>>><>><<>>><<<>>>><<<>><<<<>>>><<<<>>><>>>><<>><><<<>>><<<><<<<><<>>>><<<>><<>>>><<<>>><<<>>><<<<>>>><<<>><<<>><<<>>><<<<>><>>><<>>>><<>>><<<<>>>><<<<>><<>>>><<>>><<><>>>><>><<<<><>>>><>>>><<<>>><><<<<>><>>><>>><<>>>><><><>>><<><<<>>>><<<>><<<<>>><<<<>>>><<<<><<<<>>>><<<>>>><<<<>>>><<<><<><<><<<<><>>><<><<<>><<>><<<>><>>><<<<>>><<<<>>><<<<>><>><><<<<>><<<><<>><><<>>>><>>><<<>>><<<<><<>>>><><<<>>><<>>>><<<<>><<<<>>><<<<>>><<<>>>><>><<>>>><<<><<<<><>><<<><<<<>>><<<><<<>>><<<>>><>>>><<<><>><<<><<><<<>>><<<>><<><<<<><<<>><>>><<<<>>>><>>><<<<>><<<<>>><<><<><<<<>>>><><>>>><<<<><<>>><<>><<<>>>><<>>>><<<>>>><<<><>>><<<<>>>><>>>><<<>>>><<>>>><<<<><<>><>><<>><<<>>><>>><>>><<<>><<<><<>><<>>>><<>>>><<<>>>><>>><>><<<>>>><<>>>><<<><<>>><<><<<>>><>><<<<>>><>>><<<><<>>><<><<<><<<><<<<><<<<>>><<<<>><<>>><<><<>><<><<><<>>><<<>><>>>><<<<>>>><<><<<<>>><>>><<<>><>>>><<<>>>><>>>><<<>><<>><<<<>><<>><<<>>><<<<>>>><<><>>>><<<<><<<>>>><<<<>><<<<>>><><<<>>>><>>><<<<>>><<>>>><<<<>>>><<<<>>>><><<>>>><<<><>>>><<<<>><<<<><<<<>>><<<><<>>><<<>>><><><<<>><<<>><>>>><<<<>><<>>><<<<><>>><<<<>><<>>>><<><<>><<<<><>>><<<<><<<<>><<<<>><<><<<>>>><>>>><<>>><<>><<<<>><<><<><<<>>><<<>>>><<<<><<<>>><>>><<<>><<>>>><<<<>><<<>>><<<>><<<>>><><>>>><>><><<<<><<>>>><<>>><<>><<>>><<<<>><<<<>><><><<>>><<><<>>><<<<>>><>>><<>><<<<><<<>>><>><<<<>>><<>>><<<><<<>><<>>><><<<<>>><<<<>><>>>><>>>><<>>>><<<<>>><>><<<<>>><<>>><<<><>><<>><<<><<<>>><<<<>>><<>>>><>>>><<<<>>>><>>><<<<><<>><><<<>>><<>>>><<<<>>>><<<<>>>><<>><<<<>>>><<>><<><<>><<>>>><>>>><>>><<<>><>><<><<<>><<<><<>>><>>>><<<>>><>>><<<>>>><<<<>><<<><<>><<>><<<<><<>>><<<><<<<>><<<>>>><<<><<>><<<<>>><><<<>>>><<>><<<>>>><<<><<<><<>><>>><<<>>><<>><<<<>>><<<>>>><<>>><>>><<>>>><<<<>><>>>><<<<>><<>>><<>><<<>>><<<>>>><<<><><<<<><>>><<<>>>><<<<>>><<>>>><<>>><<<>>>><<>>>><<>>><>>><<><><<<><<<<>>>><>><>>>><><<<>>>><<<<><<<<><<>><>><<><<<>>>><>>><<<>>><>>>><>>><>>>><><<>>>><>><>><<>><><<<<>>><>>><<<<>>>><<<<><<<>>><<<<><>><>>><<><<<<>>>><<>>><<<<>>>><<<<>>><<>>>><>><<<<>>>><<<><><<<><<<<><><<<>><<>>><<<><<<>>><<<>><>>><><<<<>>>><<<<>>><>>>><>>><<><<<<><<<><<<<>><<<>>>><<<><<<<>>><<<>><<>>>><>>><<>>><<<<>><<>>><<<><>>>><<>>>><>>>><<<<>>><><<<<>><<<>>>><<<<>><<<><<<>>>><>>><<>>><<><<<<>>><>><><<><>>><>>><<<>><>>><<>>>><<>>>><>><><<<<>>>><<>>>><<>>>><<<>>>><<>>>><>>>><<>>>><>><<<>><<<<>>>><<>>>><><>>><<<<><<<<>><<>>><<>><<<<>><>><<>>>><<<>><<<<>>><<><<<><<<>>><<<<>>><<<>><>><<<<>>>><>><<<<>>><><<<>>>><>>><<<<>><>><<>>>><>>><<<<>>><<<>>>><<<>><<<<>>>><>>><>>>><<><<<>>><<<<>>>><<<>>><<<>><>><>>>><<<>>>><><<><>>><<<>><<><<<>><<<<>>><<>><>>><<<<><<<<><<<<>>><<<<>><><<<<>>><<><><<>>>><<<><><<>>>><<>>>><<<><>>>><<<<>>>><>>><<<>>>><<<<><<<>><<<<>>>><<>>><<<><<<<>>>><<>><>>>><<<<><>>>><<>>>><<<>><<>>><>>><<>>><<<<>>>><<>>>><<<<>>>><<>>><<<>><>><>>><<<><<<<>><<<>><>><<<>>><><<>><<<<>><<<<>>><<<>>><<<<>><><<<<>>><<<><<<>>>><><<<><<<<>>>><<><<<<><<><<<<>>>><><<<>><<<<>>>><<><><<>>>><>><<>>>><<>>>><<<<>>><><><><>>>><<>><>>><<>><<>><>>><<>>>><<<>>>><<<><<<>>><<<<>>>><<<<>>>><<>><<<<>><<<<><<<<>>>><<><<>>>><>>>><>>>><<<<><<<<>>><<<<>><<<>><<><<<><<<<><<<><><<>><><<<>><<<>>><<<<>><<<>>><><<<<>><<<><<>><<<>>>><<<>>>><>><><<>><>>><<>>>><<>>><>>>><<>>><<<>>>><>>>><>>><<<<><<>>><>><>>>><<<>>>><<<><>>><<><<>>>><<<>>>><<<>>><<>>><>>>><<>>>><<<<>>><<<<><><<>>>><<<<>><<<<>>>><>>><>>>><<<>><><<<><<>><<<>><<<>>>><<<<><>>><<<<>>>><<<<>>><<<>>>><<<<>>><>><<<<>>><<<<>>><<<<>><<<<><<>><<>><><<<>>><<<<>><>>>><<><>>><<>>>><>>><<<>><<<<>>><<<>>><<<<>>>><<<>>>><<<<>>><<<>>>><<<<>>>><>>><>>><<<<>>>><<<>>>><<>>>><<<>>><<<>>>><<><><>>><<><<<><<<<>><<<<>><<>>>><<<<>>>><<<<>>><<<>>><<>>><>><<>><>>><<<>>>><<>>>><<<><<>><<><><<<><<<<>><<><><<>>><<><<<><<<<>>><<<>><<<<>><<>><<<>><>>>><>><<<<><<<<>>>><<<>>><>>>><<<<>>>><<>>>><<<<><<<>>><>>><<>>><>>><<<<>><>>><<<>>>><<>><<<<>>>><<><<<<>>><<>>>><<>>>><<<>>>><<<>>>><<><>>><<<>>>><<>>><>>><<>><<<>>>><>>><>>>><<<<>>>><<>><<>>>><<<<>><<<<>>>><<<>><<><<>>><<<><<>><><<<<>>>><<<<><<<<>><><<<<>>><<<<>>><<<><<>>>><<><<<>>><>>><<>>><<<<>>>><<>>><<><<<<>>>><<<<>><<<><<>>>><<<>>>><<<><<<>><<<<>>>><>>>><<><>><<>>>><<<>><<<<>>><<<>>>><<<>>><<<<><<<>><<>><<<><<>><<>><<<>>><>><<>><<><<<>>><<>><<<>><<><<<<>><<>><<<><<<<>><>><<<<><<<<>>>><<>><<<>>><<>>><<>>><<>>>><<>>><<>>>><<<<>>><><<<<>>><<<>>><<>>><>>>><<<<>><<>><<<<><>>><<><<<<>>>><>><<>><>>><<<>><<>>>><<<<><>><<><<<<>>>><<<<>>><<>><<>><<<<><<<<>><<<<><<<<>><>><<<<><<><<<<>><<>>>><<<<><<<>>><<<><<<>>>><<><<>><<><<><<<<>>><<<>><<><<<<>><<>><<<>>>><<<>>>><<<<>>><<<>>><<<<><<<><<<<><<<><<<>>>><><<<<><>><<<<><<<><><<<>><<<>>><<<>><<<>><<<<>><<>><<<<>>><<<<>><<<<>>><<>><<<<>><<<>><<<><<>><<>>>><<<>>><<<><<>>>><<<<>>>><<><<<>>>><<<><<<>>><<>>><<<<>>>><>>>><<><><>>><<>>>><<<>>><<<<><<<>>><>>>><>>><<<>><<><<<<>>><<>>><<<>>>><<<>>>><<>>><<>>>><<<<>>>><<<><>>>><>><<<>>>><><>><<><<<><<<>>>><><<<<>>><<>>><>>><><<>><<<>><>>>><>><>>>><<<<>>><><<<<>>><>><<<>>><<<<>>>><<<<>>>><>><<<<>><<>>>><<<>>><<<><<<>>>><<><<<>>><<<<>>>><<>><<>><<<<>><<<><<>>><<><>>><<>>><>><<<>>><<<<>>><>><<<<>>>><<<>><<><<<<>><<<>>>><<<<>>><<<>>><<<<>><<>><>>><<<<>>><<<<>>>><>>><><<><<<><>>><<>>><<><>>>><>><>><<<><<><>><>><>>>><<>><>>><<<>><<<><>><>>><>>><<<>>><<<<>>><<<<>><<<<>>>><<>><<<<>>><>>>><<<>>>><>>>><>><<<>>><<>>><>>>><<<><<>>>><<>>>><<<>>><<<>><>>><<<<>>><<<><<<>>>><<<>>><<>>><><<<<>>><<>>>><<<<>>>><>><<>><<<>>>><<<>><<<<><<<>>><<<>>><>>>><<<<>>><<<<>><<<>>><>>>><<<>><<>><<<>>>><<>>>><<>>><<<><<<<>><<>><<<<>>>><<<>><<<<><<<<>><<<<>>><>><<<<>>>><<<<>>>><<<<>>>><<<<>>><><<<>>><<<<>>><<<><<<<><>>><<<<>>>><<>><<<<>><<>><>>>><>>>><<<<><>><<>><<>>>><<<<><<<<>><<<<>>><<>>><<>><><<>>><>><>><<<<>><>>>><<<<>>><><<<<>>>><<<>>>><<<>>><>>>><<<><>>><<><<<<>><<>>><>>>><<>>><<<<>><<<<>>><<><<>>>><<>>><<>>><<<<>>>><<<<>>><>>>><<>>>><>><<><<>>><<<><<<<>>>><<>><<>>>><<>>><<<<>>>><<>><<>>>><>><>>><>>><><<><>>>><<><<>>>><<<><<<><<<>>>><<><<<<><<<>>><<<<>><>>><<>>>><>>>><<<<>>>><><<>>>><<<>><<<>><<<<>><<<>><<<>>>><<<>>>><<<>><<>><<<<>>>><<>>>><<>><<<<>><>>><<<<><><>>><>><<<<><<>><<>>><<<><<<<>>><<<<>>><<<<><<>>>><<<>>>><>>>><<>>>><<<>><<<<>>><<<<>>>><>>>><<<>>><<<<>>>><<>>><<>>><><<<>>>><<<<>>><<><<<<>>><<<>>>><>>><<>>>><<<>>>><<><<>><<>><<><>>>><<<>><<<>><<<<>>><<>>>><<<<>><><<>>><><<<<>>><<>>><<<>><>><<<>><<<><<>>>><<>>>><<>><<<>>>><<>>>><<<<><<><<>><<>>><<<><>>>><>>><<<>>>><<>>><>>>><<<<><<<><<>>><<<<>><<>><<<<>><>>>><<<>>>><>>><<<><<<>>>><><<<><>>>><<<><<<><<<<>>><<><<>><>>>><<<<>><<<<><>>>><<<<>>><<<<><<>>>><<<>><<<<>><<<<>><<<<><><>>><<<>>>><<<<><<<<>>>><<<<>>><<<<><<<<><>><>>><<<<><>><>>>><<<<><<>><>>>><>>><<<<>>><>><<<>>>><<>>>><<<<>>><<<>>><>><<>><<<>><<<<>><<<<>>>><<>>><<<><<<<>><>><<>>>><<>><<<>>><<<<>>>><>><>>>><<<><<<><>><<<>>><<<>>>><<><<><<>>>><>><<>>><>>><<<>>>><<>>>><<><<><<<>>>><>><><<><<<<>>><<>>>><<<<>><>><<>>>><<<><<>>><<<>>><>><<<<><<><<>><<>><<<>><<>>>><<<><<<>>><>><<<>>>><<><<<>>>><<>>>><<<>>>><>><>>>><<>><<><<>>>><>><<<<>><>><>>>><<<<>>><>>>><>>><<<<>>><<<<>>>><<<<>>><<<<>>>><<><<>>><<<><<<<><<>><<><><<>>><<<>>><>><<<<>>>><<><><<>>><<>><<<>>>><<<<>><<>><<>>>><<<<>>><<>>><<<><<<<>><<<>>>><<<<>>>><<<><<<<>>>><<<>>><<<><<>>>><><<<>><>>><><>><<<>>><>>><>><><<>>><<<<><<<><<<<>>>><><<>>><>>>><>>><<<><<>>><<<>>>><<<>>>><<<<>><<<<>>>><<<<><>>><<<<>>><<<>>>><>><<<>>>><<<>><<<>><<<<>>>><<<<>><<<>>><>>><<<<>>><><<<>>><>><<>>><<>>>><>><>>>><<<<>><<>>><<><<<>><<<<><>>>><<>>>><<>><<>>>><<>>><<<<>><<<<><<<<><<>>>><<>>><<<<>><<<>>><<>>><<<>>>><<<<>>><<<>>>><<<>><<>>>><<<<>>>><>>>><<<>><<<>>>><<<<>><<>>>><>><<>><<<<>><>>><>>><<<>>>><<<<>><<<>>><<<>><>>><<>>><>>>><<>><>><<>><<>>>><<>><>>>><<<>>><<<<>><>><>>><><<>><><<<<><<>>>><<<>>>><>>>><<<<>><<<><>>><<<>><<<><<<>>><>><><<<<>>>><<<<>>><<<>>><<<>>><>><<<<><<<>><<<<>><><<<>>>><<<>>><<<<><<>>><><<<<><<>>>><<>><<>>><><<>>><<<>>><<<>>><<<>>>><<<>>>><<<><<>><<><<><<<<>><<<<>>>><>>><<<><<<<><<<><<<<>>><<<<>>><<<<><<<>>>><<>>><<<<>>><<><<<>>>><<<<>>>><<>>><<>>><<<<><>>><<<>><<<<><<<<><>>><<>><<<<>>>><>>>><>><<><<<<><<<>><<<<>>><>><>>><>>><<><><>>><<<<>>><<<>>>><<>><><<<<><<<>><>>><<><<<<>><<><><<<>>>><>>>><<<>>><<<>>><<>><<<>>><<<><<<<>><<<>>>><<>><<<<>>>><<<>>><>><<<>>><<<<>><<<>><<<<><<<<><<>>>><<><<<<>>>><<>><<><<<>>><<<<><<<<>>>><<<><<<<>>>><>><<>><<>>><>><<>><<<>><<><>><><><<<<><<>><<<<>><>>><<>><<<>><<<<>>><<<<><<<>><>><<<<>>><<<>>><>>>><<>>><<<<><>><><<>>><<<>><>>>><<<><<<<>>>><<<<><><<<<><<<>><<>>><<<<>>><<<<>>><<<>>><>><<<<>>><<<<>>>><<<<>><<>>><<<<><<>>>><>>>><<<>><<<>>><<>>>><>>><><>>><<<>>>><>>><<><<<>><<<<><<<<>><<<<>>>><<<><<>><<<>>>><<<<>>><<<<>>><<<<>><<<<><<>>>><<<<>>><<<<>><<>><<<<>><<<><<>>><<>>>><<<>><>>>><>>><>><><<<<>><>>><<>><<<<>>><<<>>><<<<><<<><<<<><>><><<<><<<<>>><<><<<>>>><<<>>>><<>>><<<>>><<>>>><<>>>><<<<>>><<<<>>><<><>><>><><<<<>>><<<><<<<>>>><<>>><<<<>><<<><><>>><<<<>><<<<><<<<><<<<>>>><<<<>>>><<<>>>><><>><<<<>>>><<>>>><<<><<>>><<<>>>><>><<<<>><<>>>><>>><<<<>><<<>>>><>>><<<<>><<>><<<><>><<>>>><<>>><><<>>><<<<>>><<<<>><<<><<>><<<><<<>>><<<>><<<<>>>><>>'

from enum import Enum

class Base_Shape:
    def __init__(self, name, body):
        self.name = name
        self.body = body


class Minus_Shape(Base_Shape):
    def __init__(self):
        name = '-'
        body = [
            (0, 0),
            (1, 0),
            (2, 0),
            (3, 0)
        ]
        self.width = 4
        self.height = 1
        Base_Shape.__init__(self, name, body)


class Plus_Shape(Base_Shape):
    def __init__(self):
        name = '+'
        body = [
            (0, 1),
            (1, 0),
            (1, 1),
            (1, 2),
            (2, 1)
        ]
        self.width = 3
        self.height = 3
        Base_Shape.__init__(self, name, body)


class L_Shape(Base_Shape):
    def __init__(self):
        name = 'L'
        body = [
            (0, 0),
            (1, 0),
            (2, 0),
            (2, 1),
            (2, 2)
        ]
        self.width = 3
        self.height = 3
        Base_Shape.__init__(self, name, body)


class I_Shape(Base_Shape):
    def __init__(self):
        name = 'I'
        body = [
            (0, 0),
            (0, 1),
            (0, 2),
            (0, 3)
        ]
        self.width = 1
        self.height = 3
        Base_Shape.__init__(self, name, body)


class O_Shape(Base_Shape):
    def __init__(self):
        name = 'O'
        body = [
            (0, 0),
            (0, 1),
            (1, 0),
            (1, 1)
        ]
        self.width = 2
        self.height = 2
        Base_Shape.__init__(self, name, body)


class Bag:
    SHAPES = [Minus_Shape, Plus_Shape, L_Shape, I_Shape, O_Shape]

    def __init__(self):
        self.shapes = []
        self.size = 0
        self.fill()

    def fill(self):
        for Shape in self.SHAPES:
            shape = Shape()
            self.shapes.append(shape)
        self.size += len(self.SHAPES)

    def remove(self):
        if self.size <= 0:
            self.fill()

        shape = self.shapes.pop(0)
        self.size -= 1
        return shape


class Message(Enum):
    PLACE_OK = 1
    PLACE_OUT_BOUNDS = 2
    PLACE_BAD = 3


class Board:
    def __init__(self, width):
        self.width = width
        self.height = 0
        self.prev_height = 0
        self.grid = [[]] * self.width
        self.prev_grid = [[]] * self.width
        self.is_committed = False

    def to_string(self):
        ret = ''

        for y in range(self.height - 1, -1, -1):
            for x in range(self.width):
                ret += '#' if self.grid[x][y] else '.'

            if y != 0:
                ret += '\n'

        return ret

    def add_row(self):
        self.grid = [r + [False] for r in self.grid]
        self.height += 1

    def backup(self):
        self.prev_grid = [row[:] for row in self.grid]
        self.prev_height = self.height

    def commit(self, should_commit=True):
        self.is_committed = should_commit

    def undo(self):
        self.grid = self.prev_grid
        self.height = self.prev_height
        # self.commit(True)

    def insert(self, shape, x, y):
        # assert self.is_committed, 'Previous round has not been committed'

        # self.commit(False)
        self.backup()

        for bx, by in shape.body:
            px = x + bx
            py = y + by

            if 0 > px or px >= self.width or 0 > py:
                return Message.PLACE_OUT_BOUNDS

            while py >= self.height:
                self.add_row()

            if self.grid[px][py]:
                return Message.PLACE_BAD

            self.grid[px][py] = True

        return Message.PLACE_OK


class Solution:
    ITERATIONS = 2022
    # ITERATIONS = 1000000000000
    BOARD_WIDTH = 7

    def __init__(self, puzzle_input):
        self.movements = list(puzzle_input)
        self.bag = Bag()
        self.board = Board(self.BOARD_WIDTH)
        self.current_shape = None
        self.current_x = 0
        self.current_y = 0

    def set_shape(self, shape, x, y):
        message = self.board.insert(shape, x, y)

        if message.value <= Message.PLACE_OK.value:
            self.current_shape = shape
            self.current_x = x
            self.current_y = y
        else:
            self.board.undo()

        return message

    def spawn(self, shape):
        px = 2
        py = self.board.height + 3
        # self.board.commit(True)
        return self.set_shape(shape, px, py)

    def move(self, x, y):
        self.board.undo()
        dx = self.current_x + x
        dy = self.current_y + y
        message = self.set_shape(self.current_shape, dx, dy)

        if message.value >= Message.PLACE_OUT_BOUNDS.value:
            self.board.insert(self.current_shape, self.current_x, self.current_y)

        return message

    def tick(self):
        return self.move(0, -1)

    def spawn_next(self):
        shape = self.bag.remove()
        return self.spawn(shape)

    def run(self):
        direction = {'<': -1, '>': 1}
        i = 0

        for _ in range(self.ITERATIONS):
            print(_)
            self.spawn_next()

            while True:
                if i >= len(self.movements):
                    i = 0

                movement = self.movements[i]
                self.move(direction[movement], 0)
                message = self.tick()
                i += 1

                if message.value >= Message.PLACE_OUT_BOUNDS.value:
                    break

    def get_answer(self):
        return self.board.height


solution = Solution(puzzle_input)
solution.run()
print(solution.get_answer())
